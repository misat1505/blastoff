from sqlalchemy import Column, Float, ForeignKey, Integer, String
from sqlalchemy.orm import relationship

from app.database import Base


class Rocket(Base):
    """
    Represents a rocket managed by an agency. This class corresponds to the 'rockets' table in the database.
    
    Attributes:
        id (int): The unique identifier for the rocket.
        name (str): The name of the rocket.
        agency_id (int): The ID of the agency that manages the rocket.
        no_stages (int): The number of stages of the rocket.
        height (float): The height of the rocket in meters.
        mass (float): The mass of the rocket in kilograms.
        diameter (float): The diameter of the rocket in meters.
        description (str): A detailed description of the rocket.
        launches_count (int): The number of launches the rocket has made.
        successful_launches_count (int): The number of successful launches made by the rocket.
        failed_launches_count (int): The number of failed launches made by the rocket.
        landings_count (int): The number of landings made by the rocket.
        successful_landings_count (int): The number of successful landings made by the rocket.
        failed_landings_count (int): The number of failed landings made by the rocket.
        pending_launches (int): The number of pending launches for the rocket.
        leo_capacity (float): The capacity of the rocket to deliver payloads to Low Earth Orbit (LEO) in kilograms.
        gto_capacity (float): The capacity of the rocket to deliver payloads to Geostationary Transfer Orbit (GTO) in kilograms.
        geo_capacity (float): The capacity of the rocket to deliver payloads to Geostationary Orbit (GEO) in kilograms.
        sso_capacity (float): The capacity of the rocket to deliver payloads to Sun-Synchronous Orbit (SSO) in kilograms.
        rocket_thrust (float): The thrust generated by the rocket's engines in kilonewtons.
        launch_cost (float): The cost of launching the rocket in USD.
        image_url (str): The URL of the rocket's image.
    """

    __tablename__ = "rockets"

    id = Column(Integer, primary_key=True, index=True, default=1)
    name = Column(String(100))
    agency_id = Column(Integer, ForeignKey("agencies.id"), nullable=False)
    no_stages = Column(Integer)
    height = Column(Float)
    mass = Column(Float)
    diameter = Column(Float)
    description = Column(String(5000))
    launches_count = Column(Integer)
    successful_launches_count = Column(Integer)
    failed_launches_count = Column(Integer)
    landings_count = Column(Integer)
    successful_landings_count = Column(Integer)
    failed_landings_count = Column(Integer)
    pending_launches = Column(Integer)
    leo_capacity = Column(Float)
    gto_capacity = Column(Float)
    geo_capacity = Column(Float)
    sso_capacity = Column(Float)
    rocket_thrust = Column(Float)
    launch_cost = Column(Float)
    image_url = Column(String(500))

    agency = relationship("Agency", back_populates="rockets")
    """
    Represents a many-to-one relationship with the `Agency` model.
    Each rocket is managed by a single agency. This relationship is mandatory,
    meaning that a rocket must have an associated agency.
    """

    launches = relationship(
        "Launch", back_populates="rocket", cascade="all, delete-orphan"
    )
    """
    Represents a one-to-many relationship with the `Launch` model.
    A rocket can have multiple launches associated with it. This relationship is optional,
    meaning that a rocket might not have any launches. When a rocket is deleted,
    its associated launches are also deleted.
    """
